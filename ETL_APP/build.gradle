buildscript {
    repositories {
        gradlePluginPortal()
    }
}

plugins {
    id "java"
    id "jacoco"
    id "org.springframework.boot"
    id "org.sonarqube"
    id "org.cyclonedx.bom" version "${cyclonedxVersion}"
}

group = "nl.hielkefellinger.etl_app"
version = "0.0.1-SNAPSHOT"
description = ""

java {
    sourceCompatibility = 21
    targetCompatibility = 21
}

apply from: "../gradle/sonar.gradle"

if (hasProperty("prodProfile")) {
    apply from: "../gradle/profile_prod.gradle"
} else if (hasProperty("testProfile")) {
    apply from: "../gradle/profile_test.gradle"
} else {
    apply from: "../gradle/profile_dev.gradle"
}

springBoot {
    mainClass.set("nl.hielkefellinger.etl_app.EtlApp")
}

jacoco {
    toolVersion = "${jacocoVersion}"
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoReport')
    }
}

// CUSTOM:
test {
    useJUnitPlatform()
    exclude "**/*IT*", "**/*IntTest*"

    testLogging {
        events 'FAILED', 'SKIPPED'
    }

    finalizedBy jacocoTestReport
}

dependencies {
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: "${openApiSwagger}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "${springBootVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: "${springBootVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: "${springBootVersion}"
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${jacksonVersion}"
    implementation group: 'org.liquibase', name: 'liquibase-core', version: "${liquibaseVersion}"
    implementation group: 'org.postgresql', name: 'postgresql', version: "${postgresqlVersion}"

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: "${springBootVersion}"
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-test', version: "${springBootVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"
}
